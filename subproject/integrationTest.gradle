/*
 * MIT License
 * 
 * Copyright (c) 2020 yaoyorozu
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}


dependencies {
    // integrationTestImplementation(
    //     //project.libraries.jerseyTestExternal,
    // )
}


sourceSets {
    integrationTest {
        groovy {
            srcDir 'src/integrationTest/groovy'
        }
        resources {
            srcDir 'src/integrationTest/resources'
        }

        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}


task integrationTest(type: Test) {
    description = 'Runs the integration tests to check xxx.'
    group       = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath       = sourceSets.integrationTest.runtimeClasspath
}


if (project.plugins.hasPlugin('eclipse')) {
    eclipse {
        classpath {
            configurations.integrationTestImplementation.setCanBeResolved(true)
            plusConfigurations += [ configurations.integrationTestImplementation ]
        }
    }
}
